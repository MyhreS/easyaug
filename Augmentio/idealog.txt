1.
- metode som laster inn alle bilder for augmentering.
- metoder for sequential augmentere ett bilde of returnere flere?
- print_explenation metode som printer ut hva parameterene gjør.
- print_example metode som printer et eksempel på hvordan det kan gjøres.
- Metode som viser en serie med augmenterte bilder
- Metodefor å vise en av hver type augmenterte bilder


2.
- resize_images metode som endrer størrelsen på alle bildene i en folder
- En funksjon for "view" som gjør at man ser bildene i matplotlib ellerno. Og så en funksjon for "apply" som gjør at man skriver bildene til folder. Da kan man altså se på dem og gjøre endringer før man velger å skrive de til folder.


3.
- Hvis tid gjøre augmenteringen fungerende med boundary boxes.
- En read_all_files metode


4.
Splitt augmentor til å inkludere to packages i en slik mappestruktur:
- augmentor
    - augmenting
    - quickview

- Ha en subpackage "quickview" som skal brukes i starten bare for å lese fil og se på bildene.
    - Skal kunne lese alle filene
    - Skal kunne lese alle navnene til filene
    - Skal kunne vise alle fil/filnavn
    - Skal kunne vise hvert 10'ende (x'ende) fil/filnavn
- Ha en subpackage "augmenting" som gjør alt angående augmentering i tillegg til å vise deler av det.
    - Augmentering

Alt som er i en package blir implementert i samme directory. Det er hvordan det skal se ut i Python packages.


5.
- Endre navnet fra augmetio til image_worker

6.
- La augmentering når bildene er augmentert autmatisk legge de over i en egen folder som den lager selv. F.eks. train_augmented.
Så det skal være muligheten til å sette path til images eller hvorenn man ønsker:
Eksempel 1:
Før:
-images
    -train
        -bird
        -dog
    -valid
        -bird
        -dog
    -test
        -bird
        -dog
Etter:
-images_augmented
    -train
        -bird
        -dog
    -valid
        -bird
        -dog
    -test
        -bird
        -dog
Eksempel 2:
-images
    -train
        -bird
        -dog
    -valid
        -bird
        -dog
    -test
        -bird
        -dog
Etter:
-images_augmented
    -train_augmented
        -bird
        -dog

7.
-read_all_imagenames skal lese alle bildene inkludert dem som er i folderene nedover i hierakiet.

8.
- Hvis mulig. Lag en read file slik at du kan iterere gjennom bilder ved å trykke på en knapp.

9.
- Hvis mulig. Lag en get_stats() i quickview. Denne finner ulike stats fra bildene som er funnet.
Som f.eks. hvor mange det er. Hvilke størrelser de er i osv.

10.
Lag en balancing funksjon til augmenter.

11.
Å spesifisere path er ulikt på windows og mac. Mulig alt med path på gjøres endres for at det skal passe til hver OS.

12.
Lag show_stats i augmenter. Denne viser info som f.eks. hvor mange bilder som kommer til å bli laget etter augmentering.

13.
Endre path i viewer til å ikke være i hver read med i en specify path funksjon som i augmenter.

14.
Fjern return in reads i viewer. Det er unødvendig. Kan også endre på view_images osv til å ikke ha parameter som mottar images.





Rapport
- Skrive om related works.
    - Skrive om bilde augmentering så langt.. Hva som er knotete med det.
    - Skrive om deler av prosjektet. ALtså burde jeg burke matplotlib eller seaborn..
- Skrive om hva feedback jeg fikk fra user-testing
- Skrive om resultatet
- Design = Scenarios